# @summary
# Creates the configuration file for borgmatic
#
class borgmatic::client (
  Optional[String] $config_file_destination,
  Array $source_directories,
  Array $repositories,
  Optional[Boolean] $one_file_system,
  Optional[Boolean] $numeric_owner,
  Optional[Boolean] $atime,
  Optional[Boolean] $ctime,
  Optional[Boolean] $birthtime,
  Optional[Boolean] $read_special,
  Optional[Boolean] $bsd_flags,
  Optional[String] $files_cache,
  Optional[String] $local_path,
  Optional[String] $remote_path,
  Optional[Array] $paterns,
  Optional[Array] $paterns_from,
  Optional[Array] $exclude_paterns,
  Optional[Array] $exclude_from,
  Optional[Boolean] $exclude_caches,
  Optional[Array] $exclude_if_present,
  Optional[Boolean] $keep_exclude_tags,
  Optional[Boolean] $exclude_nodump,
  Optional[String] $borgmatic_source_directory,
  Optional[Boolean] $use_storage_options,
  Optional[String] $encryption_passcommand,
  Optional[String] $encryption_passphrase,
  Optional[Integer] $checkpoint_interval,
  Optional[String] $chunker_params,
  Optional[Boolean] $use_compression,
  Optional[Boolean] $auto_compression,
  Optional[Enum['lz4', 'zstd', 'zlib', 'lzma']] $compression,
  Optional[Integer] $compression_level,
  Optional[Integer] $remote_rate_limit,
  Optional[String] $temporary_directory,
  Optional[String] $ssh_command,
  Optional[String] $borg_base_directory,
  Optional[String] $borg_config_directory,
  Optional[String] $borg_cache_directory,
  Optional[String] $borg_security_directory,
  Optional[String] $borg_keys_directory,
  Optional[String] $borg_create_umask,
  Optional[Integer] $lock_wait,
  Optional[String] $archive_name_format,
  Optional[Boolean] $relocated_repo_access_is_ok,
  Optional[Boolean] $unknown_unencrypted_repo_access_is_ok,
  Optional[Boolean] $use_extra_borg_options,
  Optional[String] $extra_borg_options_prune,
  Optional[String] $extra_borg_options_create,
  Optional[String] $extra_borg_options_check,
  Optional[String] $keep_within,
  Optional[Integer] $keep_secondly,
  Optional[Integer] $keep_minutely,
  Optional[Integer] $keep_hourly,
  Optional[Integer] $keep_daily,
  Optional[Integer] $keep_weekly,
  Optional[Integer] $keep_monthly,
  Optional[Integer] $keep_yearly,
  Optional[String] $retention_prefix,
  Optional[Boolean] $use_consistency,
  Optional[Array] $checks,
  Optional[Array] $check_repositories,
  Optional[Integer] $check_last,
  Optional[String] $consistency_prefix,
  Optional[Boolean] $use_hooks,
  Optional[Array] $before_backup,
  Optional[Array] $before_prune,
  Optional[Array] $before_check,
  Optional[Array] $before_extract,
  Optional[Array] $before_everything,
  Optional[Array] $after_backup,
  Optional[Array] $after_prune,
  Optional[Array] $after_check,
  Optional[Array] $after_extract,
  Optional[Array] $after_everything,
  Optional[Array] $on_error,
  Optional[String] $healthchecks,
  Optional[String] $cronitor,
  Optional[String] $pagerduty,
  Optional[String] $cronhub,
  Optional[String] $borg_default_umask
){
  file { $config_file_destination:
    ensure  => 'directory',
    mode    => '0750',
    owner   => 'root',
    group   => 'root'
  }

  file { "$config_file_destination/config.yaml":
    ensure  => file,
    content => epp('borgmatic/config.yaml.epp'),
    require => File[$config_file_destination]
  }
}
